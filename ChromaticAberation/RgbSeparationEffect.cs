//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Effects;
using System.Windows.Media.Media3D;


namespace LearnWPF.RgbSeparation
{

    public class RgbSeparationEffect : ShaderEffect
    {
        public static readonly DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(RgbSeparationEffect), 0);
        public static readonly DependencyProperty RedOffsetProperty = DependencyProperty.Register("RedOffset", typeof(Point), typeof(RgbSeparationEffect), new UIPropertyMetadata(new Point(0, 0), PixelShaderConstantCallback(0)));
        public static readonly DependencyProperty GreenOffsetProperty = DependencyProperty.Register("GreenOffset", typeof(Point), typeof(RgbSeparationEffect), new UIPropertyMetadata(new Point(0, 0), PixelShaderConstantCallback(1)));
        public static readonly DependencyProperty BlueOffsetProperty = DependencyProperty.Register("BlueOffset", typeof(Point), typeof(RgbSeparationEffect), new UIPropertyMetadata(new Point(0, 0), PixelShaderConstantCallback(2)));
        public RgbSeparationEffect()
        {
            PixelShader pixelShader = new PixelShader();
            pixelShader.UriSource = new Uri("/LearnWPF.RgbSeparation;component/RgbSeparation.ps", UriKind.Relative);
            this.PixelShader = pixelShader;

            this.UpdateShaderValue(InputProperty);
            this.UpdateShaderValue(RedOffsetProperty);
            this.UpdateShaderValue(GreenOffsetProperty);
            this.UpdateShaderValue(BlueOffsetProperty);
        }
        public Brush Input
        {
            get
            {
                return ((Brush)(this.GetValue(InputProperty)));
            }
            set
            {
                this.SetValue(InputProperty, value);
            }
        }
        public Point RedOffset
        {
            get
            {
                return ((Point)(this.GetValue(RedOffsetProperty)));
            }
            set
            {
                this.SetValue(RedOffsetProperty, value);
            }
        }
        public Point GreenOffset
        {
            get
            {
                return ((Point)(this.GetValue(GreenOffsetProperty)));
            }
            set
            {
                this.SetValue(GreenOffsetProperty, value);
            }
        }
        public Point BlueOffset
        {
            get
            {
                return ((Point)(this.GetValue(BlueOffsetProperty)));
            }
            set
            {
                this.SetValue(BlueOffsetProperty, value);
            }
        }
    }
}
